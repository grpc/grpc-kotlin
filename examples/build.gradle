buildscript {
  ext.kotlin_version = "1.3.61"
  ext.coroutines_version = "1.3.3"
  ext.protobuf_version = "3.11.1"
  ext.grpc_version = "1.28.1" // CURRENT_GRPC_VERSION
  ext.grpc_kotlin_version = "0.1.3" // CURRENT_GRPC_KOTLIN_VERSION

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.11"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

repositories {
  google()
  jcenter()
  mavenCentral()
  mavenLocal()
}

apply plugin: "kotlin"
apply plugin: "com.google.protobuf"

// Generate IntelliJ IDEA's .idea & .iml project files.
// protobuf-gradle-plugin automatically registers *.proto and the gen output files
// to IntelliJ as sources.
// For best results, install the Protobuf and Kotlin plugins for IntelliJ.
apply plugin: "idea"
apply plugin: "application"

dependencies {
  // This repo
  implementation "io.grpc:grpc-kotlin-stub:$grpc_kotlin_version"

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

  // Grpc and Protobuf
  implementation "com.google.protobuf:protobuf-java:$protobuf_version"
  implementation "com.google.protobuf:protobuf-java-util:$protobuf_version"
  implementation "io.grpc:grpc-netty-shaded:$grpc_version"
  implementation "io.grpc:grpc-protobuf:$grpc_version"
  implementation "io.grpc:grpc-stub:$grpc_version"

  // Java
  compileOnly "javax.annotation:javax.annotation-api:1.2"

  // Google
  implementation "com.google.guava:guava:28.2-jre"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protobuf_version" }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpc_kotlin_version"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                // Generate Java gRPC classes
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt { }
            }
        }
    }
}

startScripts.enabled = false

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = "io.grpc.examples.helloworld.HelloWorldClientKt"
    applicationName = "hello-world-client"
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

task helloWorldServer(type: CreateStartScripts) {
    mainClassName = "io.grpc.examples.helloworld.HelloWorldServerKt"
    applicationName = "hello-world-server"
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

task routeGuideClient(type: CreateStartScripts) {
    mainClassName = "io.grpc.examples.routeguide.RouteGuideClientKt"
    applicationName = "route-guide-client"
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

task routeGuideServer(type: CreateStartScripts) {
    mainClassName = "io.grpc.examples.routeguide.RouteGuideServerKt"
    applicationName = "route-guide-server"
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

applicationDistribution.into("bin") {
    from(helloWorldClient)
    from(helloWorldServer)
    from(routeGuideClient)
    from(routeGuideServer)
    fileMode = 0755
}
