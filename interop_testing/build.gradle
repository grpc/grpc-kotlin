buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlinVersion}"
  }
}

repositories {
  google()
  jcenter()
  mavenCentral()
  mavenLocal()
}

apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'

// Generate IntelliJ IDEA's .idea & .iml project files.
// protobuf-gradle-plugin automatically registers *.proto and the gen output files
// to IntelliJ as sources.
// For best results, install the Protobuf and Kotlin plugins for IntelliJ.
apply plugin: 'idea'
apply plugin: 'application'

dependencies {
  // This repo
  implementation project(':grpc-kotlin-stub')

  implementation "org.jetbrains.kotlin:kotlin-test:${rootProject.ext.kotlinVersion}"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.coroutinesVersion}"

  // Grpc and Protobuf
  implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
  implementation "com.google.protobuf:protobuf-java:${rootProject.ext.protobufVersion}"
  implementation "com.google.protobuf:protobuf-java-util:${rootProject.ext.protobufVersion}"
  implementation "io.grpc:grpc-netty-shaded:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-protobuf:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-stub:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-auth:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-alts:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-netty:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-okhttp:${rootProject.ext.grpcVersion}"
  implementation "io.grpc:grpc-testing:${rootProject.ext.grpcVersion}"

  // Java
  api "javax.annotation:javax.annotation-api:1.2"

  // Google
  implementation "com.google.guava:guava:28.2-jre"

  implementation "com.google.auth:google-auth-library-credentials:${rootProject.ext.googleauthVersion}"
  implementation 'io.netty:netty-tcnative-boringssl-static:2.0.28.Final'
  implementation "com.google.auth:google-auth-library-oauth2-http:${rootProject.ext.googleauthVersion}"

  implementation "com.google.truth:truth:1.0.1"

  testImplementation "org.mockito:mockito-core:2.28.2"
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.11.0' }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${rootProject.ext.grpcVersion}"
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            path = "$rootDir/compiler/build/install/grpc-kotlin-compiler/bin/grpc-kotlin-compiler"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                // Generate Java gRPC classes
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt {
                    task.dependsOn ':grpc-kotlin-compiler:build'
                }
            }
        }
    }
}

startScripts.enabled = false

task testServiceClient(type: CreateStartScripts) {
    mainClassName = 'io.grpc.testing.integration.TestServiceClient'
    applicationName = 'test-service-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task testServiceServer(type: CreateStartScripts) {
    mainClassName = 'io.grpc.testing.integration.TestServiceServer'
    applicationName = 'test-service-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(testServiceClient)
    from(testServiceServer)
    fileMode = 0755
}
