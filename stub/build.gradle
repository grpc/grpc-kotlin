plugins {
    id "com.google.protobuf" version "0.8.13"
    id "org.jetbrains.dokka" version "0.10.1"

    // Generate IntelliJ IDEA's .idea & .iml project files
    // Starting with 0.8.4 of protobuf-gradle-plugin, *.proto and the gen output files are added
    // to IntelliJ as sources. It is no longer necessary to add them manually to the idea {} block
    // to jump to definitions from Java and Kotlin files.
    // For best results, install the Protobuf and Kotlin plugins for IntelliJ.
    id "idea"

    // Provide convenience executables for trying out the examples.
    id "java-library"
    id "maven-publish"
}

description = "gRPC Kotlin: Stub"

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.coroutinesVersion}"

    // Grpc and Protobuf
    api "io.grpc:grpc-protobuf:${rootProject.ext.grpcVersion}"
    api "io.grpc:grpc-stub:${rootProject.ext.grpcVersion}"

    // Java
    implementation "javax.annotation:javax.annotation-api:1.2"

    // Testing
    testImplementation "junit:junit:4.12"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.5.2"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.3.2"
    testImplementation "com.google.truth.extensions:truth-proto-extension:1.0"
    testImplementation "io.grpc:grpc-testing:${rootProject.ext.grpcVersion}" // gRCP testing utilities
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${rootProject.ext.protobufVersion}" }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${rootProject.ext.grpcVersion}"
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            path = "$rootDir/compiler/build/install/grpc-kotlin-compiler/bin/grpc-kotlin-compiler"
        }
    }
    generateProtoTasks {
        all().each { task ->
            if (task.name.startsWith("generateTestProto")) {
                task.dependsOn { ":grpc-kotlin-compiler:installDist" }
            }
            task.plugins {
                // Generate Java gRPC classes
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt { }
            }
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = "javadoc"
    duplicatesStrategy "exclude"
    includeEmptyDirs false
    from javadoc.destinationDir
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/javadoc"
}

javadocJar {
    dependsOn dokkaJavadoc
    from dokkaJavadoc.outputDirectory
}

task sourcesJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            // Dokka 0.10.1 does not work for JDK 10+
            if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
                artifact javadocJar
                artifact sourcesJar
            }
        }
    }
}
